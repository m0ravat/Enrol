Index: src/main/java/org/example/Module.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example;\r\n\r\nimport java.util.Scanner;\r\n\r\npublic class Module {\r\n    private String subject;\r\n    private int size;\r\n    private String seats[][];\r\n    private Person person;\r\n    public Seat[] record;\r\n    public Module(String subject, int size){\r\n        this.subject = subject;\r\n        this.size = size;\r\n        genPerson();\r\n        genSeats();\r\n    }\r\n    private void genPerson(){\r\n        this.person.setEmail(\"Default\");\r\n        this.person.setFname(\"Default\");\r\n        this.person.setSname(\"Default\");\r\n    }\r\n    private void genSeats(){\r\n        this.seats = new String[4][size];\r\n        for(int i = 0; i < 3; i++){\r\n            for(int j = 0; j < size; j++){\r\n                switch (i){\r\n                    case 0:\r\n                        this.seats[0][j] = \"C1\";\r\n                    case 1:\r\n                        this.seats[1][j] = \"C2\";\r\n                    case 2:\r\n                        this.seats[2][j] = \"C3\";\r\n                    case 3:\r\n                        this.seats[3][j] = \"C4\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public void setSubject( String subject ){this.subject = subject;}\r\n    public void setSeats(int row, int col, String val){this.seats[row][col] = val;}\r\n    public void setSize( int size ){this.size = size;}\r\n    public void setPerson(String firstname, String surname, String email){\r\n        person = new Person(firstname,surname,email);\r\n    }\r\n\r\n    public String getSubject(){return this.subject;}\r\n    public int getSize(){return this.size;}\r\n    public void getSeats(){\r\n        for (int i = 0; i < seats.length; i++) {\r\n            for (int j = 0; j < seats[i].length; j++) {\r\n                System.out.print(seats[i][j] + \" , \");\r\n            }\r\n        }\r\n    }\r\n    public Person getPerson(){return this.person;}\r\n\r\n    public void buySeat(int row, int col){\r\n        if(seats[row][col].equals(\"X\")){System.out.println(\"org.example.Seat has been bought\");}\r\n        else{\r\n            buy(row,col);\r\n        }\r\n    }\r\n    private void buy(int Row, int col){\r\n        this.seats[Row][col] = \"X\";\r\n        PersonInfo();\r\n        CreateRecord(Row,col);\r\n    }\r\n    private void CreateRecord(int row,int col){\r\n        String Class = \"\";\r\n        switch (row){\r\n            case 0:\r\n                Class = \"C1\";\r\n            case 1:\r\n                Class = \"C2\";\r\n            case 2:\r\n                Class = \"C3\";\r\n            case 3:\r\n                Class = \"C4\";\r\n        }\r\n        for (int x=0;x<4*size;x++){\r\n            if (record[x] == null){\r\n                record[x].setCol(col);\r\n                record[x].setRow(row);\r\n                record[x].setClasss(Class);\r\n                record[x].setPerson(this.person);\r\n                x = 1000;\r\n            }\r\n        }\r\n    }\r\n    private void PersonInfo(){\r\n        Scanner input = new Scanner(System.in);\r\n        System.out.println(\"Enter your first name: \");\r\n        String fname = input.next();\r\n        this.person.setFname(fname);\r\n        System.out.println(\"Enter your surname: \");\r\n        String sname = input.next();\r\n        this.person.setSname(sname);\r\n        System.out.println(\"Enter your email: \");\r\n        String email = input.next();\r\n        this.person.setEmail(email);\r\n    }\r\n    public void cancelSeat(int row, int col){\r\n        setSeats(row, col, \"C\" + row);\r\n        System.out.println(\"You have cancelled this module.\");\r\n        cancel(row,col);\r\n        getSeats();\r\n    }\r\n    private void cancel(int row, int col){\r\n        for (int x = 0;x<4*size;x++){\r\n            if (row==record[x].getRow()){\r\n                if (col == record[x].getCol()){\r\n                    for (int y = x;y<record.length-1;y++){\r\n                        record[y] = record[y+1];\r\n                        x = 52;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public void findFirstSeat(){\r\n        for (int i = 0; i < 3; i++) {\r\n            for (int j = 0; j < this.size; j++) {\r\n                if (this.seats[i][j].contains(\"C\")) {\r\n                    System.out.println(\"First seat is available at \" + i + \" \" + j);\r\n                    i=4;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public void printSeats(){\r\n        getSeats();\r\n    }\r\n    public void seatsLeft(){\r\n        int total = 0;\r\n        for (int i = 0; i < 3; i++) {\r\n            for (int j = 0; j < this.size; j++) {\r\n                if (this.seats[i][j].contains((\"C\"))) {\r\n                    total++;\r\n                }\r\n            }\r\n        }\r\n        System.out.println(\"There are \" + total + \" seats left\");\r\n    }\r\n    public void seatInfo(int row, int col){\r\n        if (this.seats[row][col].contains(\"C\")){\r\n            System.out.println(\"org.example.Seat is available at \" + row + \" \" + col);\r\n        }\r\n        else{\r\n            for (int x =0;x<record.length-1;x++){\r\n                if (record[x].getRow()==row){\r\n                    if (record[x].getCol() == col){\r\n                        record[x].printTicket();\r\n                        x=1000;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/Module.java b/src/main/java/org/example/Module.java
--- a/src/main/java/org/example/Module.java	(revision a3538351e703e9ca5818aa84ac4480c41ab515ef)
+++ b/src/main/java/org/example/Module.java	(date 1719427808287)
@@ -11,6 +11,7 @@
     public Module(String subject, int size){
         this.subject = subject;
         this.size = size;
+        this.person = new Person("","","");
         genPerson();
         genSeats();
     }
Index: src/main/java/org/example/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example;\r\n\r\nimport java.util.Scanner;\r\nimport java.util.InputMismatchException;\r\npublic class Main {\r\n    static Module serverWeb = new Module(\"ServerSideWeb\", 10);\r\n    static Module clientWeb = new Module(\"ClientSideWeb\", 5);\r\n    static Module mobile = new Module(\"MobileAppDev\", 10);\r\n    static Module operate = new Module(\"OperatingSystems\", 7);\r\n    static Module robots = new Module(\"Robotics\", 6);\r\n    static Module current = serverWeb;\r\n\r\n    public static void main(String[] args) {\r\n        Scanner input = new Scanner(System.in);\r\n        boolean loop = false;\r\n        while (!loop){\r\n            System.out.println(\"Please select which class you want to enrol in: \" +\r\n                    \"1 - Server side web development \" +\r\n                    \"2 - Client side web development\" +\r\n                    \"3 - Mobile App Development\" +\r\n                    \"4 - Operating Systems\" +\r\n                    \"5 - Robotic Principles\" +\r\n                    \"0 - Quit Application\");\r\n            try {\r\n                int menu = input.nextInt();\r\n                switch (menu) {\r\n                    case 1 -> current=serverWeb;\r\n                    case 2 -> current=clientWeb;\r\n                    case 3 -> current=mobile;\r\n                    case 4 -> current=operate;\r\n                    case 5 -> current=robots;\r\n                    case 0 -> {\r\n                        loop=true;\r\n                        System.out.println(\"Thank you for using the Plane Management application\");\r\n                    }\r\n                    default -> System.out.println(\"Please enter a valid menu option\");\r\n                }\r\n            } catch (InputMismatchException e) {\r\n                System.out.println(\"Enter an integer please\");\r\n                input.nextLine();\r\n            }\r\n            int x = 1;\r\n            while (x==1){\r\n                System.out.println(\"Would you like to: \" +\r\n                        \"A - Book a place\" +\r\n                        \"B - Cancel a place\" +\r\n                        \"C - Find the first available place\" +\r\n                        \"D - Find how many openings are left\" +\r\n                        \"E - Find the info for a seat\" +\r\n                        \"F - Return to the original menu\" +\r\n                        \"G - Quit Application\");\r\n                String choice = input.next();\r\n                int row = 0;\r\n                int col = 0;\r\n                switch (choice) {\r\n                    case \"A\":\r\n                        row = getRow();\r\n                        col = getCol();\r\n                        current.buySeat(row,col);\r\n                    case \"B\":\r\n                        row = getRow();\r\n                        col = getCol();\r\n                        current.cancelSeat(row,col);\r\n                    case \"C\":\r\n                        current.findFirstSeat();\r\n                    case \"D\":\r\n                        current.seatsLeft();\r\n                    case \"E\":\r\n                        row = getRow();\r\n                        col = getCol();\r\n                        current.seatInfo(row,col);\r\n                    case \"F\":\r\n                        x=2;\r\n                    case \"G\":\r\n                        x=2;\r\n                        loop=true;\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private static int getCol(){\r\n        Scanner input = new Scanner(System.in);\r\n        int col = 0;\r\n        int maxcol = current.getSize();\r\n        boolean colValid = false;\r\n        while (!colValid){\r\n            System.out.println(\"Enter a column number between 0 and \" + maxcol);\r\n            col = input.nextInt();\r\n            if (col > -1){\r\n                if (col < (maxcol+1)){\r\n                    colValid = true;\r\n                }\r\n            }\r\n        }\r\n        return col;\r\n    }\r\n    private static int getRow(){\r\n        Scanner input = new Scanner(System.in);\r\n        int row = 0;\r\n        int maxrow = 4;\r\n        boolean rowValid = false;\r\n        while (!rowValid){\r\n            System.out.println(\"Enter a column number between 0 and \" + maxrow);\r\n            row = input.nextInt();\r\n            if (row > -1){\r\n                if (row < (maxrow+1)){\r\n                    rowValid = true;\r\n                }\r\n            }\r\n        }\r\n        return row;\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/Main.java b/src/main/java/org/example/Main.java
--- a/src/main/java/org/example/Main.java	(revision a3538351e703e9ca5818aa84ac4480c41ab515ef)
+++ b/src/main/java/org/example/Main.java	(date 1719427953743)
@@ -9,17 +9,16 @@
     static Module operate = new Module("OperatingSystems", 7);
     static Module robots = new Module("Robotics", 6);
     static Module current = serverWeb;
-
     public static void main(String[] args) {
         Scanner input = new Scanner(System.in);
         boolean loop = false;
         while (!loop){
-            System.out.println("Please select which class you want to enrol in: " +
-                    "1 - Server side web development " +
-                    "2 - Client side web development" +
-                    "3 - Mobile App Development" +
-                    "4 - Operating Systems" +
-                    "5 - Robotic Principles" +
+            System.out.println("Please select which class you want to enrol in: \n " +
+                    "1 - Server side web development  \n" +
+                    "2 - Client side web development \n"  +
+                    "3 - Mobile App Development \n" +
+                    "4 - Operating Systems \n" +
+                    "5 - Robotic Principles \n" +
                     "0 - Quit Application");
             try {
                 int menu = input.nextInt();
@@ -112,5 +111,4 @@
         }
         return row;
     }
-
 }
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"f1e528e5-9f03-4217-91bc-9ddacec3424c\" name=\"Changes\" comment=\"\">\r\n      <change afterPath=\"$PROJECT_DIR$/.gitignore\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/encodings.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/uiDesigner.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/vcs.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/pom.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/org/example/Main.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/org/example/Module.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/org/example/Person.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/org/example/Seat.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\"><![CDATA[{\r\n  \"associatedIndex\": 7\r\n}]]></component>\r\n  <component name=\"ProjectId\" id=\"2iQWi1CL2qQumiELOiATk60IhN2\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Application.Main.executor\": \"Debug\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"git-widget-placeholder\": \"master\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"onboarding.tips.debug.path\": \"C:/Users/m0rav/IdeaProjects/Enrol/src/main/java/org/example/Main.java\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.example.Main\" />\r\n      <module name=\"Enrol\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-jdk-9f38398b9061-39b83d9b5494-intellij.indexing.shared.core-IU-241.18034.62\" />\r\n        <option value=\"bundled-js-predefined-1d06a55b98c1-0b3e54e931b4-JavaScript-IU-241.18034.62\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"f1e528e5-9f03-4217-91bc-9ddacec3424c\" name=\"Changes\" comment=\"\" />\r\n      <created>1719423407715</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1719423407715</updated>\r\n      <workItem from=\"1719423409005\" duration=\"2207000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision a3538351e703e9ca5818aa84ac4480c41ab515ef)
+++ b/.idea/workspace.xml	(date 1719427953826)
@@ -4,18 +4,10 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="f1e528e5-9f03-4217-91bc-9ddacec3424c" name="Changes" comment="">
-      <change afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/encodings.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/uiDesigner.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/Main.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/Module.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/Person.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/Seat.java" afterDir="false" />
+    <list default="true" id="f1e528e5-9f03-4217-91bc-9ddacec3424c" name="Changes" comment="Initial commit">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/Main.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/Module.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/Module.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -32,31 +24,46 @@
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
-  <component name="ProjectColorInfo"><![CDATA[{
-  "associatedIndex": 7
-}]]></component>
+  <component name="GitHubPullRequestSearchHistory">{
+  &quot;lastFilter&quot;: {
+    &quot;state&quot;: &quot;OPEN&quot;,
+    &quot;assignee&quot;: &quot;m0ravat&quot;
+  }
+}</component>
+  <component name="GithubPullRequestsUISettings">{
+  &quot;selectedUrlAndAccountId&quot;: {
+    &quot;url&quot;: &quot;https://github.com/m0ravat/Enrol.git&quot;,
+    &quot;accountId&quot;: &quot;187c7d69-2b2e-43bf-b902-46bcec898113&quot;
+  }
+}</component>
+  <component name="ProjectColorInfo">{
+  &quot;associatedIndex&quot;: 7
+}</component>
   <component name="ProjectId" id="2iQWi1CL2qQumiELOiATk60IhN2" />
   <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "Application.Main.executor": "Debug",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "git-widget-placeholder": "master",
-    "kotlin-language-version-configured": "true",
-    "node.js.detected.package.eslint": "true",
-    "node.js.detected.package.tslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "nodejs_package_manager_path": "npm",
-    "onboarding.tips.debug.path": "C:/Users/m0rav/IdeaProjects/Enrol/src/main/java/org/example/Main.java",
-    "vue.rearranger.settings.migration": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;Application.Main.executor&quot;: &quot;Run&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
+    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
+    &quot;onboarding.tips.debug.path&quot;: &quot;C:/Users/m0rav/IdeaProjects/Enrol/src/main/java/org/example/Main.java&quot;,
+    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,
+    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
+    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
-}]]></component>
+}</component>
   <component name="RunManager">
     <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="org.example.Main" />
@@ -93,11 +100,27 @@
       <option name="number" value="Default" />
       <option name="presentableId" value="Default" />
       <updated>1719423407715</updated>
-      <workItem from="1719423409005" duration="2207000" />
+      <workItem from="1719423409005" duration="2543000" />
+      <workItem from="1719426141316" duration="3000" />
+      <workItem from="1719426515947" duration="334000" />
+      <workItem from="1719427320640" duration="625000" />
+    </task>
+    <task id="LOCAL-00001" summary="Initial commit">
+      <option name="closed" value="true" />
+      <created>1719425715581</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1719425715581</updated>
     </task>
+    <option name="localTasksCounter" value="2" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
     <option name="version" value="3" />
   </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value="Initial commit" />
+    <option name="LAST_COMMIT_MESSAGE" value="Initial commit" />
+  </component>
 </project>
\ No newline at end of file
